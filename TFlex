import pygame
pygame.font.init()

WIDTH, HEIGHT = 900, 500
WIN = pygame.display.set_mode((WIDTH, HEIGHT))
pygame. display.set_caption("TFlex")

BORDER = pygame.Rect(WIDTH//2 - 5, 0, 10, HEIGHT)

HP_FONT = pygame.font.SysFont('comicsans', 40)
WIN_FONT = pygame.font.SysFont('comicsans', 100)

def draw_window(red, yellow, red_bullets, yellow_bullets, red_HP, yellow_HP): #ეს პუნქცია ქმნის ფანჯარას ეგრეთ წოდებულ მაპს
    WIN.fill((42,0,51))
    pygame.draw.rect(WIN, (0,0,0), BORDER)

    red_HP_text = HP_FONT.render("Health:" + str(red_HP), 1, WHITE)
    yellow_HP_text = HP_FONT.render("Health:" + str(yellow_HP), 1, WHITE)
    WIN.blit(red_HP_text, (WIDTH - red_HP_text.get_width() - 10, 10))
    WIN.blit(yellow_HP_text, (10, 10))

    WIN.blit(YELLOW_SPACESHIP, (yellow.x, yellow.y))
    WIN.blit(RED_SPACESHIP, (red.x, red.y))

    for bullet in red_bullets:
        pygame.draw.rect(WIN, RED, bullet)

    for bullet in yellow_bullets:
        pygame.draw.rect(WIN, YELLOW, bullet)

    pygame.display.update()

FPS = 60
SPD = 7
BL_SPD = 10
MAX_BULLETS = 3
SPACESHIP_WIDTH, SPACESHIP_HEIGHT = 55, 40
 
RED = (255,0,0)
YELLOW = (255,255,0)
WHITE = (255,255,255)

YELLOW_HIT = pygame.USEREVENT + 1
RED_HIT = pygame.USEREVENT + 2

YELLOW_SPACESHIP_IMAGE = pygame.image.load('spaceship_yellow.png')
YELLOW_SPACESHIP = pygame.transform.rotate (pygame.transform.scale(YELLOW_SPACESHIP_IMAGE, (SPACESHIP_WIDTH, SPACESHIP_HEIGHT)),90)


RED_SPACESHIP_IMAGE = pygame.image.load('spaceship_red.png')
RED_SPACESHIP = pygame.transform.rotate (pygame.transform.scale(RED_SPACESHIP_IMAGE, (SPACESHIP_WIDTH, SPACESHIP_HEIGHT)),270)

def yellow_movments(keys_pressed, yellow):
    if keys_pressed[pygame.K_a] and yellow.x - SPD > 0: #left
        yellow.x -= SPD
    if keys_pressed[pygame.K_d] and yellow.x + SPD + yellow.width < BORDER.x:#right
        yellow.x += SPD
    if keys_pressed[pygame.K_w] and yellow.y - SPD > 0:#up
        yellow.y -= SPD
    if keys_pressed[pygame.K_s] and yellow.y + SPD + yellow.height < HEIGHT:#down
        yellow.y += SPD

def hn_bullets(yellow_bullets, red_bullets, yellow, red):
    for bullet in yellow_bullets:
        bullet.x += BL_SPD
        if red.colliderect(bullet):
            pygame.event.post(pygame.event.Event(RED_HIT))
            yellow_bullets.remove(bullet)
        elif bullet.x > WIDTH:
            yellow_bullets.remove(bullet)

    for bullet in red_bullets:
        bullet.x -= BL_SPD
        if yellow.colliderect(bullet):
            pygame.event.post(pygame.event.Event(YELLOW_HIT))
            red_bullets.remove(bullet)
        elif bullet.x < 0:
            red_bullets.remove(bullet)

def red_movments(keys_pressed, red):
    if keys_pressed[pygame.K_LEFT] and red.x - SPD > BORDER.x + BORDER.width: #left
        red.x -= SPD
    if keys_pressed[pygame.K_RIGHT] and red.x + SPD + red.width < WIDTH: #right
        red.x += SPD
    if keys_pressed[pygame.K_UP] and red.y - SPD > 0: #up
        red.y -= SPD
    if keys_pressed[pygame.K_DOWN] and red.y + SPD + red.height < HEIGHT:#down
        red.y += SPD

def draw_WIN(text):
    draw_text = WIN_FONT.render(text, 1, WHITE)
    WIN.blit(draw_text, (WIDTH/2 - draw_text.get_width()/2, HEIGHT/2 - draw_text.get_height()/2))
    pygame.display.update()
    pygame.time.delay(5000)


def main(): #ეს არის მთავარი ფუნქცია რომელშიც არის შეტანილი ყველა სხვა ფუნქცია ასევე აქ არის სპრაიტების პარამეტრები
    red = pygame.Rect(700, 300, SPACESHIP_WIDTH, SPACESHIP_HEIGHT)
    yellow = pygame.Rect(100, 300, SPACESHIP_WIDTH, SPACESHIP_HEIGHT)

    red_bullets = []
    yellow_bullets = []

    red_HP = 10
    yellow_HP = 10

    clock = pygame.time.Clock()
    run = True
    while run:
        clock.tick(FPS)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False
        
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LCTRL and len(yellow_bullets) < MAX_BULLETS:
                    bullet = pygame.Rect(yellow.x + yellow.width, yellow.y + yellow.height//2 - 2, 10, 5)
                    yellow_bullets.append(bullet)

                if event.key == pygame.K_RCTRL and len(red_bullets) < MAX_BULLETS:
                    bullet = pygame.Rect(red.x, red.y + red.height//2 - 2, 10, 5)
                    red_bullets.append(bullet)

            if event.type == RED_HIT:
                red_HP -= 1

            if event.type == YELLOW_HIT: 
                yellow_HP -= 1

        winner_text = ""
        if red_HP <= 0:
            winner_text = "Yellow Wins!!"

        if yellow_HP <= 0:
            winner_text = "Red Wins!!"

        if winner_text != "":
            draw_WIN(winner_text) # SOMEONE WON
            break



        keys_pressed = pygame.key.get_pressed()
        red_movments(keys_pressed, red)
        yellow_movments(keys_pressed, yellow)
        
        hn_bullets(yellow_bullets, red_bullets, yellow, red)

        draw_window(red, yellow, red_bullets, yellow_bullets, red_HP, yellow_HP)

    pygame.quit()

if __name__ == "__main__":
    main()
